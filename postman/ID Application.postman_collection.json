{
	"info": {
		"_postman_id": "1093dcb1-b38d-4266-b39c-6105408ce73a",
		"name": "ID Application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Application",
			"item": [
				{
					"name": "TC01 - Request ID - OK",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "79317dfa-e252-4b7a-9dd4-463d83728d08",
								"exec": [
									"const factoryHost = pm.environment.get('factoryHost');\r",
									"const callback = Buffer.from(factoryHost, \"utf-8\").toString('base64');\r",
									"pm.request.url.query.add('callback=' + callback);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d71d5bbf-e3bd-4863-b93d-9de26bbd4d19",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{applicationHost}}/id/?factoryId=123",
							"host": [
								"{{applicationHost}}"
							],
							"path": [
								"id",
								""
							],
							"query": [
								{
									"key": "factoryId",
									"value": "123"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC02 - Request ID - Missing factoryId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "749ce66c-89ea-4e13-859a-f2e2ad3b3c2e",
								"exec": [
									"const factoryHost = pm.environment.get('factoryHost');\r",
									"const callback = Buffer.from(factoryHost, \"utf-8\").toString('base64');\r",
									"pm.request.url.query.add('callback=' + callback);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b029672d-d1a4-40ae-894e-e9aa4798abe5",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Has error\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.contain('factoryId');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{applicationHost}}/id/",
							"host": [
								"{{applicationHost}}"
							],
							"path": [
								"id",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "TC03 - Request ID - Missing callback",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "feeb3457-98fd-4f0c-b250-13edff724b74",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "44117de7-ea10-4281-8912-b210699b99ee",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Has error\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.contain('callback');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{applicationHost}}/id/?factoryId=123",
							"host": [
								"{{applicationHost}}"
							],
							"path": [
								"id",
								""
							],
							"query": [
								{
									"key": "factoryId",
									"value": "123"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC04 - Request ID - Invalid factoryId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7502c69e-abee-4a96-a287-db0f5b39f5b9",
								"exec": [
									"const factoryHost = pm.environment.get('factoryHost');\r",
									"const callback = Buffer.from(factoryHost, \"utf-8\").toString('base64');\r",
									"pm.request.url.query.add('callback=' + callback);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ff640a15-bb6f-46b6-9df1-586bd1ba5a12",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Has error\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.contain('factoryId');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{applicationHost}}/id/?factoryId=invalid",
							"host": [
								"{{applicationHost}}"
							],
							"path": [
								"id",
								""
							],
							"query": [
								{
									"key": "factoryId",
									"value": "invalid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC05 - Request ID - Invalid callback",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1f9398a9-96fe-49cd-aca6-bea2aff731e8",
								"exec": [
									"const callback = Buffer.from('Not a URL', \"utf-8\").toString('base64');\r",
									"pm.request.url.query.add('callback=' + callback);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c00e9bf5-daa0-438d-a1c3-bd757e2f5b36",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Has error\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.contain('callback');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{applicationHost}}/id/?factoryId=123",
							"host": [
								"{{applicationHost}}"
							],
							"path": [
								"id",
								""
							],
							"query": [
								{
									"key": "factoryId",
									"value": "123"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Factory",
			"item": [
				{
					"name": "API",
					"item": [
						{
							"name": "Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{factoryHost}}/status",
									"host": [
										"{{factoryHost}}"
									],
									"path": [
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get DB",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{factoryHost}}/_data",
									"host": [
										"{{factoryHost}}"
									],
									"path": [
										"_data"
									]
								}
							},
							"response": []
						},
						{
							"name": "Requests",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{factoryHost}}/_requests/{{laptopToken}}",
									"host": [
										"{{factoryHost}}"
									],
									"path": [
										"_requests",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Make a laptop",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0776c1c-a729-4ed4-a883-dff8164e3269",
										"exec": [
											"var laptop = pm.response.json();\r",
											"pm.globals.set('laptopToken', laptop.token);\r",
											"pm.globals.set('laptopCallback', laptop.callbackUrl);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{factoryHost}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{factoryHost}}/_make",
									"host": [
										"{{factoryHost}}"
									],
									"path": [
										"_make"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set timeout",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"after\": 110000,\r\n    \"times\": 3\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{factoryHost}}/_timeout/{{laptopToken}}",
									"host": [
										"{{factoryHost}}"
									],
									"path": [
										"_timeout",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set fail",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": 501\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{factoryHost}}/_fail/{{laptopToken}}",
									"host": [
										"{{factoryHost}}"
									],
									"path": [
										"_fail",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Receive (NEW ID)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c40caa10-ef5a-4932-9d72-a91f485791d2",
										"exec": [
											"const lastIndex = pm.collectionVariables.get('lastIndex');\r",
											"pm.collectionVariables.set('lastIndex', lastIndex + 1);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"seq{{factoryId}}_{{lastIndex}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{factoryHost}}/receive/{{laptopToken}}/{{sessionId}}",
									"host": [
										"{{factoryHost}}"
									],
									"path": [
										"receive",
										"{{laptopToken}}",
										"{{sessionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Receive (NEW ID, Callback)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "fb8b1ad0-95b4-4e2e-b11f-49103fe7127c",
										"exec": [
											"const lastIndex = pm.collectionVariables.get('lastIndex');\r",
											"pm.collectionVariables.set('lastIndex', lastIndex + 1);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"seq{{factoryId}}_{{lastIndex}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{laptopCallback}}",
									"host": [
										"{{laptopCallback}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Receive (SAME ID, Callback)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5024ef43-0add-48b0-92bd-66b521394ad6",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"seq{{factoryId}}_{{lastIndex}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{laptopCallback}}",
									"host": [
										"{{laptopCallback}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Clean DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5df4a91a-80d0-4c5b-8ead-b29fbe52404f",
										"exec": [
											"pm.collectionVariables.set('lastIndex', 0);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{factoryHost}}/_data",
									"host": [
										"{{factoryHost}}"
									],
									"path": [
										"_data"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Self-test",
					"item": [
						{
							"name": "01 Positive",
							"item": [
								{
									"name": "Clean DB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9f4f3a1e-cecf-4baa-ade4-8f1fa2fab4e4",
												"exec": [
													"pm.collectionVariables.set('lastIndex', 0);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "32dbdd65-59f4-4952-9053-a20b7f05f959",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_data",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_data"
											]
										}
									},
									"response": []
								},
								{
									"name": "Make a laptop",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fcb3a647-0fed-4bea-81ff-013e49291d2e",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var laptop = pm.response.json();\r",
													"pm.globals.set('laptopToken', laptop.token);\r",
													"pm.globals.set('laptopCallback', laptop.callbackUrl);\r",
													"pm.globals.set('laptopCallbackB64', laptop.callbackUrlBase64);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{factoryHost}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{factoryHost}}/_make",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_make"
											]
										}
									},
									"response": []
								},
								{
									"name": "No requests",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1c56b405-0d82-4eae-a83e-89b89aed4149",
												"exec": [
													"pm.test(\"There are no requests\", function () {\r",
													"    var requests = pm.response.json().requests;\r",
													"    pm.expect(requests).to.have.lengthOf(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_requests/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_requests",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Receive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d985f44a-379b-424d-9251-13dc965e6e12",
												"exec": [
													"const lastIndex = pm.collectionVariables.get('lastIndex');\r",
													"pm.collectionVariables.set('lastIndex', lastIndex + 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "90a40e42-40bb-4b74-9c38-cb0456065a7c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"seq{{factoryId}}_{{lastIndex}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{laptopCallback}}",
											"host": [
												"{{laptopCallback}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Success request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "58736295-b1a6-42b4-81cd-ce875f99b689",
												"exec": [
													"var requests = pm.response.json().requests;\r",
													"pm.test(\"There is 1 request\", function () {\r",
													"    pm.expect(requests).to.have.lengthOf(1);\r",
													"});\r",
													"pm.test(\"There should be a Success request\", function () {\r",
													"    pm.expect(requests[0].response).to.equal(\"success\");\r",
													"});\r",
													"pm.test(\"There should be an ID sent\", function () {\r",
													"    var factoryId = pm.collectionVariables.get('factoryId');\r",
													"    var lastIndex = pm.collectionVariables.get('lastIndex');\r",
													"    pm.expect(requests[0].body.id).to.equal(`seq${factoryId}_${lastIndex}`);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_requests/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_requests",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "02 Negative - Fail",
							"item": [
								{
									"name": "Clean DB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0467ecde-5dde-4a88-80b7-aca4653ef170",
												"exec": [
													"pm.collectionVariables.set('lastIndex', 0);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_data",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_data"
											]
										}
									},
									"response": []
								},
								{
									"name": "Make a laptop",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6387cb87-d27c-4bf3-a03a-13eca786243f",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var laptop = pm.response.json();\r",
													"pm.globals.set('laptopToken', laptop.token);\r",
													"pm.globals.set('laptopCallback', laptop.callbackUrl);\r",
													"pm.globals.set('laptopCallbackB64', laptop.callbackUrlBase64);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{factoryHost}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{factoryHost}}/_make",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_make"
											]
										}
									},
									"response": []
								},
								{
									"name": "Set fail (409)",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": 409\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{factoryHost}}/_fail/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_fail",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "No requests",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f1dd1eb3-e00c-4a13-b74c-f7da0d78d685",
												"exec": [
													"pm.test(\"There are no requests\", function () {\r",
													"    var requests = pm.response.json().requests;\r",
													"    pm.expect(requests).to.have.lengthOf(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_requests/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_requests",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Receive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b57979b7-9f3a-4132-a0b4-d4f110ec4e48",
												"exec": [
													"const lastIndex = pm.collectionVariables.get('lastIndex');\r",
													"pm.collectionVariables.set('lastIndex', lastIndex + 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5272ba84-c295-4d62-a6e4-4c66f983a800",
												"exec": [
													"pm.test(\"Status code is 409\", function () {\r",
													"    pm.response.to.have.status(409);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"seq{{factoryId}}_{{lastIndex}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{laptopCallback}}",
											"host": [
												"{{laptopCallback}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Fail request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "db9252ad-f972-47ae-8557-4475de21957d",
												"exec": [
													"var requests = pm.response.json().requests;\r",
													"pm.test(\"There is 1 request\", function () {\r",
													"    pm.expect(requests).to.have.lengthOf(1);\r",
													"});\r",
													"pm.test(\"There should be a Success request\", function () {\r",
													"    pm.expect(requests[0].response).to.equal(\"fail\");\r",
													"    pm.expect(requests[0].status).to.equal(409);\r",
													"});\r",
													"pm.test(\"There should be an ID sent\", function () {\r",
													"    var factoryId = pm.collectionVariables.get('factoryId');\r",
													"    var lastIndex = pm.collectionVariables.get('lastIndex');\r",
													"    pm.expect(requests[0].body.id).to.equal(`seq${factoryId}_${lastIndex}`);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_requests/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_requests",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "03 Negative - Timeout",
							"item": [
								{
									"name": "Clean DB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3ca5afcf-16ca-4fca-bab2-bf04ecc14729",
												"exec": [
													"pm.collectionVariables.set('lastIndex', 0);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_data",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_data"
											]
										}
									},
									"response": []
								},
								{
									"name": "Make a laptop",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7cb0e0f1-f357-4391-90e8-af39e2b200c7",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var laptop = pm.response.json();\r",
													"pm.globals.set('laptopToken', laptop.token);\r",
													"pm.globals.set('laptopCallback', laptop.callbackUrl);\r",
													"pm.globals.set('laptopCallbackB64', laptop.callbackUrlBase64);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{factoryHost}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{factoryHost}}/_make",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_make"
											]
										}
									},
									"response": []
								},
								{
									"name": "Set timeout (2x 2sec)",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"after\": 2000,\r\n    \"times\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{factoryHost}}/_timeout/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_timeout",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "No requests",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "78d0ad0d-9415-405f-8771-f95dceb09dde",
												"exec": [
													"pm.test(\"There are no requests\", function () {\r",
													"    var requests = pm.response.json().requests;\r",
													"    pm.expect(requests).to.have.lengthOf(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_requests/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_requests",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Receive #1 - Timeout",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e227be23-2090-4a57-8797-e0b2c8d0eed9",
												"exec": [
													"const lastIndex = pm.collectionVariables.get('lastIndex');\r",
													"pm.collectionVariables.set('lastIndex', lastIndex + 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b1bd7766-3e6d-4649-abd7-6296faad4c8f",
												"exec": [
													"pm.test(\"Status code is 408\", function () {\r",
													"    pm.response.to.have.status(408);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"seq{{factoryId}}_{{lastIndex}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{laptopCallback}}",
											"host": [
												"{{laptopCallback}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Receive #2 - Timeout",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "177bfd07-0290-4c0f-96fc-ff2bb113e0cc",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "d6f79a8a-e4e5-4566-8342-3a53c83f227d",
												"exec": [
													"pm.test(\"Status code is 408\", function () {\r",
													"    pm.response.to.have.status(408);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"seq{{factoryId}}_{{lastIndex}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{laptopCallback}}",
											"host": [
												"{{laptopCallback}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Receive #3 - Success",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1e0407d0-216f-4dff-a0c9-c9ef7ffeedf1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7735b5db-fa8b-4061-8cb4-bbbed0bcc83c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"seq{{factoryId}}_{{lastIndex}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{laptopCallback}}",
											"host": [
												"{{laptopCallback}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "All requests",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9b4cf554-e2c3-426a-81b5-2f7ad6f6af93",
												"exec": [
													"var requests = pm.response.json().requests;\r",
													"pm.test(\"There is 3request\", function () {\r",
													"    pm.expect(requests).to.have.lengthOf(3);\r",
													"});\r",
													"pm.test(\"There should be a 2 timeout requests\", function () {\r",
													"    pm.expect(requests[0].response).to.equal(\"timeout\");\r",
													"    pm.expect(requests[0].status).to.equal(408);\r",
													"    pm.expect(requests[1].response).to.equal(\"timeout\");\r",
													"    pm.expect(requests[1].status).to.equal(408);\r",
													"});\r",
													"pm.test(\"There should be a Success request\", function () {\r",
													"    pm.expect(requests[2].response).to.equal(\"success\");\r",
													"    pm.expect(requests[2].status).to.equal(200);\r",
													"});\r",
													"pm.test(\"There should be an ID sent\", function () {\r",
													"    var factoryId = pm.collectionVariables.get('factoryId');\r",
													"    var lastIndex = pm.collectionVariables.get('lastIndex');\r",
													"    pm.expect(requests[2].body.id).to.equal(`seq${factoryId}_${lastIndex}`);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_requests/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_requests",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Dev",
					"item": [
						{
							"name": "01 Positive",
							"item": [
								{
									"name": "Clean DB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2b90c0a1-bd7f-45fd-a886-2c8a1a7d835e",
												"exec": [
													"pm.collectionVariables.set('lastIndex', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cd6b3375-a6c1-4520-bb48-f1573e7fd91a",
												"exec": [
													"pm.globals.unset('retries');"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_data",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_data"
											]
										}
									},
									"response": []
								},
								{
									"name": "Make a laptop",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c1382ed2-c474-440c-a8b7-609a8cacdb81",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var laptop = pm.response.json();\r",
													"pm.globals.set('laptopToken', laptop.token);\r",
													"pm.globals.set('laptopCallback', laptop.callbackUrl);\r",
													"pm.globals.set('laptopCallbackB64', laptop.callbackUrlBase64);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{factoryHost}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{factoryHost}}/_make",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_make"
											]
										}
									},
									"response": []
								},
								{
									"name": "Request ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{applicationHost}}/id?factoryId={{factoryId}}&callback={{laptopCallbackB64}}",
											"host": [
												"{{applicationHost}}"
											],
											"path": [
												"id"
											],
											"query": [
												{
													"key": "factoryId",
													"value": "{{factoryId}}"
												},
												{
													"key": "callback",
													"value": "{{laptopCallbackB64}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Wait for success request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "35051aeb-88d3-4db6-9a84-ccc717053a8b",
												"exec": [
													"pm.test(\"There should be an ID sent\", function () {\r",
													"    let requests = pm.response.json().requests;\r",
													"    let successfulRequest = requests.find(r => r.response === 'success');\r",
													"    if (successfulRequest) {\r",
													"        var factoryId = pm.collectionVariables.get('factoryId');\r",
													"        var lastIndex = pm.collectionVariables.get('lastIndex');\r",
													"        pm.expect(successfulRequest.body.id).to.match(new RegExp(`^seq${factoryId}_\\\\d+$`));\r",
													"    } else {\r",
													"        const RETRIES = 'retries';\r",
													"        const MAX_RETRY = pm.collectionVariables.get('maxRetry');\r",
													"        let retries = pm.globals.has(RETRIES) ? pm.globals.get(RETRIES) : 0;\r",
													"        if (retries < MAX_RETRY) {\r",
													"            postman.setNextRequest(pm.info.requestName);\r",
													"            pm.globals.set(RETRIES, retries+1);\r",
													"            setTimeout(function(){}, pm.collectionVariables.get('retryDelay')); \r",
													"        } else {\r",
													"            postman.setNextRequest(null);\r",
													"            pm.globals.unset(RETRIES);\r",
													"            throw new Error(\"Request did not arrive in \" + MAX_RETRY +\" retries!\");\r",
													"        }\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_requests/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_requests",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "02 Negative - Fail",
							"item": [
								{
									"name": "Clean DB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5961894c-96cf-48a6-84cd-f336a9de7c53",
												"exec": [
													"pm.collectionVariables.set('lastIndex', 1);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "232e3f3f-bf41-4f00-a5da-2ae4534319ac",
												"exec": [
													"pm.globals.unset('retries');"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_data",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_data"
											]
										}
									},
									"response": []
								},
								{
									"name": "Make a laptop",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9be3ad5-3780-47d5-8c4f-f6a41234db95",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var laptop = pm.response.json();\r",
													"pm.globals.set('laptopToken', laptop.token);\r",
													"pm.globals.set('laptopCallback', laptop.callbackUrl);\r",
													"pm.globals.set('laptopCallbackB64', laptop.callbackUrlBase64);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{factoryHost}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{factoryHost}}/_make",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_make"
											]
										}
									},
									"response": []
								},
								{
									"name": "Set fail (409)",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"status\": 409\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{factoryHost}}/_fail/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_fail",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Request ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{applicationHost}}/id?factoryId={{factoryId}}&callback={{laptopCallbackB64}}",
											"host": [
												"{{applicationHost}}"
											],
											"path": [
												"id"
											],
											"query": [
												{
													"key": "factoryId",
													"value": "{{factoryId}}"
												},
												{
													"key": "callback",
													"value": "{{laptopCallbackB64}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Wait for success request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5a4d7412-89a2-4ca1-bee4-287b997eddcf",
												"exec": [
													"pm.test(\"There should be an ID sent\", function () {\r",
													"    let requests = pm.response.json().requests;\r",
													"    console.log(requests);\r",
													"    let successfulRequest = requests.find(r => r.response === 'fail');\r",
													"    if (successfulRequest) {\r",
													"        var factoryId = pm.collectionVariables.get('factoryId');\r",
													"        var lastIndex = pm.collectionVariables.get('lastIndex');\r",
													"        pm.expect(successfulRequest.body.id).to.match(new RegExp(`^seq${factoryId}_\\\\d+$`));\r",
													"    } else {\r",
													"        const RETRIES = 'retries';\r",
													"        const MAX_RETRY = pm.collectionVariables.get('maxRetry');\r",
													"        let retries = pm.globals.has(RETRIES) ? pm.globals.get(RETRIES) : 0;\r",
													"        if (retries < MAX_RETRY) {\r",
													"            postman.setNextRequest(pm.info.requestName);\r",
													"            pm.globals.set(RETRIES, retries+1);\r",
													"            setTimeout(function(){}, pm.collectionVariables.get('retryDelay')); \r",
													"        } else {\r",
													"            postman.setNextRequest(null);\r",
													"            pm.globals.unset(RETRIES);\r",
													"            throw new Error(\"Request did not arrive in \" + MAX_RETRY +\" retries!\");\r",
													"        }\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_requests/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_requests",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "03 Negative - Timeout",
							"item": [
								{
									"name": "Clean DB",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "09ef5e6b-b926-4cab-8c5e-882b6d3931ce",
												"exec": [
													"pm.collectionVariables.set('lastIndex', 1);\r",
													"pm.globals.unset('retries');"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_data",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_data"
											]
										}
									},
									"response": []
								},
								{
									"name": "Make a laptop",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c3c6e54b-01e7-43c6-8047-06df59a6d61c",
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var laptop = pm.response.json();\r",
													"pm.globals.set('laptopToken', laptop.token);\r",
													"pm.globals.set('laptopCallback', laptop.callbackUrl);\r",
													"pm.globals.set('laptopCallbackB64', laptop.callbackUrlBase64);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{factoryHost}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{factoryHost}}/_make",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_make"
											]
										}
									},
									"response": []
								},
								{
									"name": "Set timeout (2x 2sec)",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"after\": 2000,\r\n    \"times\": 2\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{factoryHost}}/_timeout/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_timeout",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Request ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{applicationHost}}/id?factoryId={{factoryId}}&callback={{laptopCallbackB64}}",
											"host": [
												"{{applicationHost}}"
											],
											"path": [
												"id"
											],
											"query": [
												{
													"key": "factoryId",
													"value": "{{factoryId}}"
												},
												{
													"key": "callback",
													"value": "{{laptopCallbackB64}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Wait for success request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1553a322-8486-4b98-8166-c3cd03920b64",
												"exec": [
													"pm.test(\"There should be an ID sent\", function () {\r",
													"    let requests = pm.response.json().requests;\r",
													"    let successfulRequest = requests.find(r => r.response === 'success');\r",
													"    if (successfulRequest) {\r",
													"        var factoryId = pm.collectionVariables.get('factoryId');\r",
													"        var lastIndex = pm.collectionVariables.get('lastIndex');\r",
													"        pm.expect(successfulRequest.body.id).to.match(new RegExp(`^seq${factoryId}_\\\\d+$`));\r",
													"    } else {\r",
													"        const RETRIES = 'retries';\r",
													"        const MAX_RETRY = pm.collectionVariables.get('maxRetry');\r",
													"        let retries = pm.globals.has(RETRIES) ? pm.globals.get(RETRIES) : 0;\r",
													"        if (retries < MAX_RETRY) {\r",
													"            postman.setNextRequest(pm.info.requestName);\r",
													"            pm.globals.set(RETRIES, retries+1);\r",
													"            setTimeout(function(){}, pm.collectionVariables.get('retryDelay')); \r",
													"        } else {\r",
													"            postman.setNextRequest(null);\r",
													"            pm.globals.unset(RETRIES);\r",
													"            throw new Error(\"Request did not arrive in \" + MAX_RETRY +\" retries!\");\r",
													"        }\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{factoryHost}}/_requests/{{laptopToken}}",
											"host": [
												"{{factoryHost}}"
											],
											"path": [
												"_requests",
												"{{laptopToken}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f4b42d0a-3df5-4e42-a650-eedce18fb041",
						"type": "text/javascript",
						"exec": [
							"pm.request.headers.add({key: 'x-test-session-id', value: pm.collectionVariables.get('sessionId')});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "64e9892c-b489-4954-98ca-6e6c06851501",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ecf2765c-35a3-4984-91e7-be19fcb8f7df",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c29c4fe3-fb4a-4071-a327-6fd73abe6ff5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cbf635b7-777c-4894-9e23-9f2d51c6cc25",
			"key": "factoryId",
			"value": "123"
		},
		{
			"id": "9e333b1d-a882-4943-9041-649232b11714",
			"key": "sessionId",
			"value": "12345678-1234-1234-12345678"
		},
		{
			"id": "18d05feb-c8f4-46ea-b34d-5d90020c4283",
			"key": "lastIndex",
			"value": "0"
		},
		{
			"id": "162bb3d6-d2db-4904-87a7-8eebc8820d74",
			"key": "maxRetry",
			"value": "5"
		},
		{
			"id": "4d321274-a473-478a-9720-1fe7d8a19ac2",
			"key": "retryDelay",
			"value": "3000"
		}
	],
	"protocolProfileBehavior": {}
}