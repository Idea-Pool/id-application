{
	"info": {
		"_postman_id": "ce7388b0-2ecf-46fe-aa04-14bab3495ddb",
		"name": "LM PET Mock Factory",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "API",
			"item": [
				{
					"name": "Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/status",
							"host": [
								"{{url}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DB",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/_requests/{{laptopToken}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"_requests",
								"{{laptopToken}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Make a laptop",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "277d224d-7bf7-422b-a414-f5743f5fecf8",
								"exec": [
									"var laptop = pm.response.json();\r",
									"pm.globals.set('laptopToken', laptop.token);\r",
									"pm.globals.set('laptopCallback', laptop.callbackUrl);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{url}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/_make",
							"host": [
								"{{url}}"
							],
							"path": [
								"_make"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set timeout",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"after\": 110000,\r\n    \"times\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/_timeout/{{laptopToken}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"_timeout",
								"{{laptopToken}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set fail",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": 501\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/_fail/{{laptopToken}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"_fail",
								"{{laptopToken}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Receive (NEW ID)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "46792988-1e51-44f1-86b0-ae18698f7979",
								"exec": [
									"const lastIndex = pm.collectionVariables.get('lastIndex');\r",
									"pm.collectionVariables.set('lastIndex', lastIndex + 1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"pear{{factoryId}}_{{lastIndex}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/receive/{{laptopToken}}/{{sessionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"receive",
								"{{laptopToken}}",
								"{{sessionId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Receive (NEW ID, Callback)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c334c80d-c5da-4157-9d8a-74fa5f080c4c",
								"exec": [
									"const lastIndex = pm.collectionVariables.get('lastIndex');\r",
									"pm.collectionVariables.set('lastIndex', lastIndex + 1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"pear{{factoryId}}_{{lastIndex}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{laptopCallback}}",
							"host": [
								"{{laptopCallback}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Receive (SAME ID, Callback)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2ca316e8-0ac5-4e22-a7c5-240d39ee5558",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"pear{{factoryId}}_{{lastIndex}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{laptopCallback}}",
							"host": [
								"{{laptopCallback}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clean DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70593f24-2db8-43a9-b38b-413e30386cb7",
								"exec": [
									"pm.collectionVariables.set('lastIndex', 0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/_data",
							"host": [
								"{{url}}"
							],
							"path": [
								"_data"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Self-test",
			"item": [
				{
					"name": "01 Positive",
					"item": [
						{
							"name": "Clean DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10fa1660-25b8-4298-b61d-b5a2ab0e78ad",
										"exec": [
											"pm.collectionVariables.set('lastIndex', 0);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cc302ad6-d041-4e99-ace5-164f3e62d140",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/_data",
									"host": [
										"{{url}}"
									],
									"path": [
										"_data"
									]
								}
							},
							"response": []
						},
						{
							"name": "Make a laptop",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9caa768a-36fd-4890-bdfe-d77ad06c97fe",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var laptop = pm.response.json();\r",
											"pm.globals.set('laptopToken', laptop.token);\r",
											"pm.globals.set('laptopCallback', laptop.callbackUrl);\r",
											"pm.globals.set('laptopCallbackB64', laptop.callbackUrlBase64);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{url}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/_make",
									"host": [
										"{{url}}"
									],
									"path": [
										"_make"
									]
								}
							},
							"response": []
						},
						{
							"name": "No requests",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "411d7c87-879a-44c4-8f00-3052afe34add",
										"exec": [
											"pm.test(\"There are no requests\", function () {\r",
											"    var requests = pm.response.json().requests;\r",
											"    pm.expect(requests).to.have.lengthOf(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/_requests/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_requests",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Receive",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7889d729-dd13-4997-a061-3cbb2b9db62b",
										"exec": [
											"const lastIndex = pm.collectionVariables.get('lastIndex');\r",
											"pm.collectionVariables.set('lastIndex', lastIndex + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6bd24599-9b2b-473c-b038-58dc0591d2a7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"pear{{factoryId}}_{{lastIndex}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{laptopCallback}}",
									"host": [
										"{{laptopCallback}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Success request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d02c3248-d456-49f6-9d05-a9836628ab0a",
										"exec": [
											"var requests = pm.response.json().requests;\r",
											"pm.test(\"There is 1 request\", function () {\r",
											"    pm.expect(requests).to.have.lengthOf(1);\r",
											"});\r",
											"pm.test(\"There should be a Success request\", function () {\r",
											"    pm.expect(requests[0].response).to.equal(\"success\");\r",
											"});\r",
											"pm.test(\"There should be an ID sent\", function () {\r",
											"    var factoryId = pm.collectionVariables.get('factoryId');\r",
											"    var lastIndex = pm.collectionVariables.get('lastIndex');\r",
											"    pm.expect(requests[0].body.id).to.equal(`pear${factoryId}_${lastIndex}`);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/_requests/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_requests",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "02 Negative - Fail",
					"item": [
						{
							"name": "Clean DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db141cf2-0e31-4886-ba06-3c100c19a694",
										"exec": [
											"pm.collectionVariables.set('lastIndex', 0);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/_data",
									"host": [
										"{{url}}"
									],
									"path": [
										"_data"
									]
								}
							},
							"response": []
						},
						{
							"name": "Make a laptop",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "232cc6ff-209f-4fef-a98e-cc72d9a0f72b",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var laptop = pm.response.json();\r",
											"pm.globals.set('laptopToken', laptop.token);\r",
											"pm.globals.set('laptopCallback', laptop.callbackUrl);\r",
											"pm.globals.set('laptopCallbackB64', laptop.callbackUrlBase64);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{url}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/_make",
									"host": [
										"{{url}}"
									],
									"path": [
										"_make"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set fail (409)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": 409\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/_fail/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_fail",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "No requests",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7430fe89-00f6-420f-94cf-dd84cbb069cc",
										"exec": [
											"pm.test(\"There are no requests\", function () {\r",
											"    var requests = pm.response.json().requests;\r",
											"    pm.expect(requests).to.have.lengthOf(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/_requests/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_requests",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Receive",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "33234c0b-033d-4a16-b3f6-c8c2421d196c",
										"exec": [
											"const lastIndex = pm.collectionVariables.get('lastIndex');\r",
											"pm.collectionVariables.set('lastIndex', lastIndex + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a61f11a1-9f3b-48b4-9afa-42cc4e34c89f",
										"exec": [
											"pm.test(\"Status code is 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"pear{{factoryId}}_{{lastIndex}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{laptopCallback}}",
									"host": [
										"{{laptopCallback}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "004550a9-a6a7-4a77-baa0-1e85e38b8d68",
										"exec": [
											"var requests = pm.response.json().requests;\r",
											"pm.test(\"There is 1 request\", function () {\r",
											"    pm.expect(requests).to.have.lengthOf(1);\r",
											"});\r",
											"pm.test(\"There should be a Success request\", function () {\r",
											"    pm.expect(requests[0].response).to.equal(\"fail\");\r",
											"    pm.expect(requests[0].status).to.equal(409);\r",
											"});\r",
											"pm.test(\"There should be an ID sent\", function () {\r",
											"    var factoryId = pm.collectionVariables.get('factoryId');\r",
											"    var lastIndex = pm.collectionVariables.get('lastIndex');\r",
											"    pm.expect(requests[0].body.id).to.equal(`pear${factoryId}_${lastIndex}`);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/_requests/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_requests",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "03 Negative - Timeout",
					"item": [
						{
							"name": "Clean DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a2b5aa5-136e-4383-91b5-68a798b41d33",
										"exec": [
											"pm.collectionVariables.set('lastIndex', 0);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/_data",
									"host": [
										"{{url}}"
									],
									"path": [
										"_data"
									]
								}
							},
							"response": []
						},
						{
							"name": "Make a laptop",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08f9f87f-386b-4d29-8392-47a35f4be2a3",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var laptop = pm.response.json();\r",
											"pm.globals.set('laptopToken', laptop.token);\r",
											"pm.globals.set('laptopCallback', laptop.callbackUrl);\r",
											"pm.globals.set('laptopCallbackB64', laptop.callbackUrlBase64);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{url}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/_make",
									"host": [
										"{{url}}"
									],
									"path": [
										"_make"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set timeout (2x 2sec)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"after\": 2000,\r\n    \"times\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/_timeout/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_timeout",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "No requests",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "00fec5a6-8edb-4283-bffa-71b359e1f6de",
										"exec": [
											"pm.test(\"There are no requests\", function () {\r",
											"    var requests = pm.response.json().requests;\r",
											"    pm.expect(requests).to.have.lengthOf(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/_requests/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_requests",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Receive #1 - Timeout",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "41f4933e-fd84-4fed-9ac7-a9afcbb2e045",
										"exec": [
											"const lastIndex = pm.collectionVariables.get('lastIndex');\r",
											"pm.collectionVariables.set('lastIndex', lastIndex + 1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "be7eadcc-8f3a-4ec4-a37a-8079796b3047",
										"exec": [
											"pm.test(\"Status code is 408\", function () {\r",
											"    pm.response.to.have.status(408);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"pear{{factoryId}}_{{lastIndex}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{laptopCallback}}",
									"host": [
										"{{laptopCallback}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Receive #2 - Timeout",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "11b0b233-eed4-4a03-81de-ad4b749b48de",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3249a3e7-f13c-4926-9a8f-aac54f172589",
										"exec": [
											"pm.test(\"Status code is 408\", function () {\r",
											"    pm.response.to.have.status(408);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"pear{{factoryId}}_{{lastIndex}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{laptopCallback}}",
									"host": [
										"{{laptopCallback}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Receive #3 - Success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "90cb6b3a-fb10-4150-9114-663e54a1acf1",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b45738e9-6a8d-4b08-bbca-a7c820121698",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"pear{{factoryId}}_{{lastIndex}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{laptopCallback}}",
									"host": [
										"{{laptopCallback}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "All requests",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6d7716-a0a9-47ae-90f5-400a34cf28d3",
										"exec": [
											"var requests = pm.response.json().requests;\r",
											"pm.test(\"There is 3request\", function () {\r",
											"    pm.expect(requests).to.have.lengthOf(3);\r",
											"});\r",
											"pm.test(\"There should be a 2 timeout requests\", function () {\r",
											"    pm.expect(requests[0].response).to.equal(\"timeout\");\r",
											"    pm.expect(requests[0].status).to.equal(408);\r",
											"    pm.expect(requests[1].response).to.equal(\"timeout\");\r",
											"    pm.expect(requests[1].status).to.equal(408);\r",
											"});\r",
											"pm.test(\"There should be a Success request\", function () {\r",
											"    pm.expect(requests[2].response).to.equal(\"success\");\r",
											"    pm.expect(requests[2].status).to.equal(200);\r",
											"});\r",
											"pm.test(\"There should be an ID sent\", function () {\r",
											"    var factoryId = pm.collectionVariables.get('factoryId');\r",
											"    var lastIndex = pm.collectionVariables.get('lastIndex');\r",
											"    pm.expect(requests[2].body.id).to.equal(`pear${factoryId}_${lastIndex}`);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/_requests/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_requests",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dev",
			"item": [
				{
					"name": "01 Positive",
					"item": [
						{
							"name": "Clean DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1276282-e2b1-4452-b43e-9ef4bd3bb520",
										"exec": [
											"pm.collectionVariables.set('lastIndex', 0);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f496fc01-f20c-442e-bf4a-23c3019abe59",
										"exec": [
											"pm.globals.unset('retries');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/_data",
									"host": [
										"{{url}}"
									],
									"path": [
										"_data"
									]
								}
							},
							"response": []
						},
						{
							"name": "Make a laptop",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "66c36e0b-7c5f-4e22-bf67-ced36de63cf5",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var laptop = pm.response.json();\r",
											"pm.globals.set('laptopToken', laptop.token);\r",
											"pm.globals.set('laptopCallback', laptop.callbackUrl);\r",
											"pm.globals.set('laptopCallbackB64', laptop.callbackUrlBase64);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{url}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/_make",
									"host": [
										"{{url}}"
									],
									"path": [
										"_make"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{idAppUrl}}?factoryId={{factoryId}}&callback={{laptopCallbackB64}}",
									"host": [
										"{{idAppUrl}}"
									],
									"query": [
										{
											"key": "factoryId",
											"value": "{{factoryId}}"
										},
										{
											"key": "callback",
											"value": "{{laptopCallbackB64}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Wait for success request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43e891ca-c2bd-4dce-8d45-d442eaef6b0e",
										"exec": [
											"pm.test(\"There should be an ID sent\", function () {\r",
											"    let requests = pm.response.json().requests;\r",
											"    let successfulRequest = requests.find(r => r.response === 'success');\r",
											"    if (successfulRequest) {\r",
											"        var factoryId = pm.collectionVariables.get('factoryId');\r",
											"        var lastIndex = pm.collectionVariables.get('lastIndex');\r",
											"        pm.expect(successfulRequest.body.id).to.equal(`pear${factoryId}_${lastIndex}`);\r",
											"    } else {\r",
											"        const RETRIES = 'retries';\r",
											"        const MAX_RETRY = pm.collectionVariables.get('maxRetry');\r",
											"        let retries = pm.globals.has(RETRIES) ? pm.globals.get(RETRIES) : 0;\r",
											"        if (retries < MAX_RETRY) {\r",
											"            postman.setNextRequest(pm.info.requestName);\r",
											"            pm.globals.set(RETRIES, retries+1);\r",
											"            setTimeout(function(){}, pm.collectionVariables.get('retryDelay')); \r",
											"        } else {\r",
											"            postman.setNextRequest(null);\r",
											"            pm.globals.unset(RETRIES);\r",
											"            throw new Error(\"Request did not arrive in \" + MAX_RETRY +\" retries!\");\r",
											"        }\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/_requests/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_requests",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "02 Negative - Fail",
					"item": [
						{
							"name": "Clean DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb065584-4be6-4a6c-a6e3-ea552f77e53d",
										"exec": [
											"pm.collectionVariables.set('lastIndex', 0);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ffb66554-2f45-4de1-9524-d707987ca356",
										"exec": [
											"pm.globals.unset('retries');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/_data",
									"host": [
										"{{url}}"
									],
									"path": [
										"_data"
									]
								}
							},
							"response": []
						},
						{
							"name": "Make a laptop",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3512ce9-422b-46c9-86b1-ea88fdb29c9e",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var laptop = pm.response.json();\r",
											"pm.globals.set('laptopToken', laptop.token);\r",
											"pm.globals.set('laptopCallback', laptop.callbackUrl);\r",
											"pm.globals.set('laptopCallbackB64', laptop.callbackUrlBase64);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{url}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/_make",
									"host": [
										"{{url}}"
									],
									"path": [
										"_make"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set fail (409)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"status\": 409\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/_fail/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_fail",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{idAppUrl}}?factoryId={{factoryId}}&callback={{laptopCallbackB64}}",
									"host": [
										"{{idAppUrl}}"
									],
									"query": [
										{
											"key": "factoryId",
											"value": "{{factoryId}}"
										},
										{
											"key": "callback",
											"value": "{{laptopCallbackB64}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Wait for success request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bcff0c14-ad2a-425e-bad1-b80248a9c114",
										"exec": [
											"pm.test(\"There should be an ID sent\", function () {\r",
											"    let requests = pm.response.json().requests;\r",
											"    let successfulRequest = requests.find(r => r.response === 'success');\r",
											"    if (successfulRequest) {\r",
											"        var factoryId = pm.collectionVariables.get('factoryId');\r",
											"        var lastIndex = pm.collectionVariables.get('lastIndex');\r",
											"        pm.expect(successfulRequest.body.id).to.equal(`pear${factoryId}_${lastIndex}`);\r",
											"    } else {\r",
											"        const RETRIES = 'retries';\r",
											"        const MAX_RETRY = pm.collectionVariables.get('maxRetry');\r",
											"        let retries = pm.globals.has(RETRIES) ? pm.globals.get(RETRIES) : 0;\r",
											"        if (retries < MAX_RETRY) {\r",
											"            postman.setNextRequest(pm.info.requestName);\r",
											"            pm.globals.set(RETRIES, retries+1);\r",
											"            setTimeout(function(){}, pm.collectionVariables.get('retryDelay')); \r",
											"        } else {\r",
											"            postman.setNextRequest(null);\r",
											"            pm.globals.unset(RETRIES);\r",
											"            throw new Error(\"Request did not arrive in \" + MAX_RETRY +\" retries!\");\r",
											"        }\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/_requests/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_requests",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "03 Negative - Timeout",
					"item": [
						{
							"name": "Clean DB",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f200827d-ea3b-4862-b0ca-40aa5718b3ae",
										"exec": [
											"pm.globals.unset('retries');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/_data",
									"host": [
										"{{url}}"
									],
									"path": [
										"_data"
									]
								}
							},
							"response": []
						},
						{
							"name": "Make a laptop",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5dd30123-a9f5-4b34-b377-4fdbeacf18b9",
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var laptop = pm.response.json();\r",
											"pm.globals.set('laptopToken', laptop.token);\r",
											"pm.globals.set('laptopCallback', laptop.callbackUrl);\r",
											"pm.globals.set('laptopCallbackB64', laptop.callbackUrlBase64);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"factoryId\": {{factoryId}},\r\n    \"baseUrl\": \"{{url}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/_make",
									"host": [
										"{{url}}"
									],
									"path": [
										"_make"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set timeout (2x 2sec)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"after\": 2000,\r\n    \"times\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/_timeout/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_timeout",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{idAppUrl}}?factoryId={{factoryId}}&callback={{laptopCallbackB64}}",
									"host": [
										"{{idAppUrl}}"
									],
									"query": [
										{
											"key": "factoryId",
											"value": "{{factoryId}}"
										},
										{
											"key": "callback",
											"value": "{{laptopCallbackB64}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Wait for success request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d1ab7dd-ca72-453e-a6d0-7ce06bbf2cca",
										"exec": [
											"pm.test(\"There should be an ID sent\", function () {\r",
											"    let requests = pm.response.json().requests;\r",
											"    let successfulRequest = requests.find(r => r.response === 'success');\r",
											"    if (successfulRequest) {\r",
											"        var factoryId = pm.collectionVariables.get('factoryId');\r",
											"        var lastIndex = pm.collectionVariables.get('lastIndex');\r",
											"        pm.expect(successfulRequest.body.id).to.equal(`pear${factoryId}_${lastIndex}`);\r",
											"    } else {\r",
											"        const RETRIES = 'retries';\r",
											"        const MAX_RETRY = pm.collectionVariables.get('maxRetry');\r",
											"        let retries = pm.globals.has(RETRIES) ? pm.globals.get(RETRIES) : 0;\r",
											"        if (retries < MAX_RETRY) {\r",
											"            postman.setNextRequest(pm.info.requestName);\r",
											"            pm.globals.set(RETRIES, retries+1);\r",
											"            setTimeout(function(){}, pm.collectionVariables.get('retryDelay')); \r",
											"        } else {\r",
											"            postman.setNextRequest(null);\r",
											"            pm.globals.unset(RETRIES);\r",
											"            throw new Error(\"Request did not arrive in \" + MAX_RETRY +\" retries!\");\r",
											"        }\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/_requests/{{laptopToken}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"_requests",
										"{{laptopToken}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "5102d777-1aae-44fa-b9b9-e09449fb2f54",
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add({key: 'x-test-session-id', value: pm.collectionVariables.get('sessionId')});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "aa33e4f8-f955-4c47-b06a-9bc0f990463d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "637e4c48-28a2-4cdf-9e6f-aa56968f2b82",
			"key": "url",
			"value": "http://localhost:3000"
		},
		{
			"id": "c9cc0f54-076d-4613-a51b-fd8c59749e3f",
			"key": "sessionId",
			"value": "12345678-1234-1234-12345678"
		},
		{
			"id": "05ae15ed-30df-49a6-8761-55aad192d82d",
			"key": "factoryId",
			"value": "123"
		},
		{
			"id": "cec19459-b954-4c1a-8e83-8bdcb2cf111a",
			"key": "lastIndex",
			"value": "0"
		},
		{
			"id": "b275bf1c-053c-491c-a8a9-aba46e681389",
			"key": "idAppUrl",
			"value": "TBD"
		},
		{
			"id": "2858879a-3adc-42af-8e16-4c68539b7b9f",
			"key": "maxRetry",
			"value": "10"
		},
		{
			"id": "1dcadb6c-63ed-492d-bd16-0e7c4a71873e",
			"key": "retryDelay",
			"value": "10000"
		}
	],
	"protocolProfileBehavior": {}
}